# Nginx configuration optimized for SSE (Server-Sent Events)
# Place this in /etc/nginx/sites-available/jackstatz

server {
    listen 80;
    server_name your-domain.com www.your-domain.com;  # Replace with your domain
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Gzip compression (but NOT for SSE)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Static files
    location /static/ {
        alias /path/to/your/jackstatz/static/;  # Replace with your actual path
        expires 1y;
        add_header Cache-Control "public, immutable";
        gzip_static on;
    }
    
    # ðŸ”´ CRITICAL: Server-Sent Events endpoint configuration
    location /events {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # ðŸš¨ ESSENTIAL SSE SETTINGS - DO NOT CHANGE THESE
        proxy_buffering off;                    # Disable all buffering
        proxy_cache off;                        # Disable caching
        proxy_read_timeout 24h;                 # Keep connection alive 24 hours
        proxy_connect_timeout 5s;               # Quick connection timeout
        proxy_send_timeout 24h;                 # Long send timeout
        
        # HTTP/1.1 settings for persistent connections
        proxy_http_version 1.1;
        proxy_set_header Connection "";         # Clear connection header
        
        # Disable chunked encoding (required for SSE)
        chunked_transfer_encoding off;
        
        # Nginx-specific SSE headers
        add_header X-Accel-Buffering no;        # Disable Nginx buffering
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # CORS headers for cross-origin SSE (if needed)
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # Main application (regular HTTP requests)
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Normal timeouts for regular requests
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Normal buffering for regular requests
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:8000;
        access_log off;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|git|gitignore|py)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Optional: Redirect www to non-www
server {
    listen 80;
    server_name www.your-domain.com;
    return 301 http://your-domain.com$request_uri;
}
